#!/bin/bash
echo "üîÑ SISTEMA DE MANUTEN√á√ÉO CONT√çNUA ZENNITH"
echo "========================================="

# VERIFICAR SA√öDE DO SISTEMA PERIODICAMENTE
verificar_saude_sistema() {
    echo "üîç VERIFICA√á√ÉO DE SA√öDE - $(date)"
    echo "================================"
    
    # Verificar logs
    echo "üìä Sistema de Log:"
    find . -name "*.log" -mtime -1 | wc -l | xargs echo "  Logs √∫ltimos 24h:"
    
    # Verificar fun√ß√µes core
    echo "üîß Fun√ß√µes Core:"
    grep -r "function\|def " utils_zennith_*.sh 2>/dev/null | wc -l | xargs echo "  Fun√ß√µes dispon√≠veis:"
    
    # Verificar espa√ßo
    echo "üíæ Espa√ßo em Disco:"
    du -sh . | awk '{print "  " $1}'
    
    echo "‚úÖ Verifica√ß√£o conclu√≠da"
}

# EXECUTAR MANUTEN√á√ÉO AUTOM√ÅTICA
executar_manutencao() {
    echo "üõ†Ô∏è EXECUTANDO MANUTEN√á√ÉO AUTOM√ÅTICA"
    echo "================================="
    
    # Limpar caches
    find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null
    echo "‚úÖ Cache Python limpo"
    
    # Compactar logs antigos
    find . -name "*.log" -mtime +7 -exec gzip {} \; 2>/dev/null
    echo "‚úÖ Logs antigos compactados"
    
    # Verificar integridade
    echo "üîç Verificando integridade do sistema..."
    for script in utils_zennith_log_avancado.sh utils_zennith_processamento.sh; do
        if [[ -f "$script" ]]; then
            echo "‚úÖ $script: OK"
        else
            echo "‚ùå $script: AUSENTE"
        fi
    done
    
    echo "ÔøΩÔøΩ Manuten√ß√£o conclu√≠da"
}

# MENU PRINCIPAL
case "${1:-verificar}" in
    "verificar")
        verificar_saude_sistema
        ;;
    "manutencao")
        executar_manutencao
        ;;
    *)
        echo "Uso: $0 [verificar|manutencao]"
        ;;
esac
