#!/bin/bash
echo "üîÑ MIGRADOR SEGURO - FUN√á√ÉO LOG UNIFICADA"
echo "=========================================="

# 1. ANALISAR AS 3 IMPLEMENTA√á√ïES DE LOG
echo "üîç Analisando implementa√ß√µes atuais de log():"

echo ""
echo "üìÑ organizador_universal_fundacao.sh (linha 24):"
sed -n '24,30p' organizador_universal_fundacao.sh

echo ""
echo "üìÑ sistema_governanca_zennith.sh (linha 21):" 
sed -n '21,27p' sistema_governanca_zennith.sh

echo ""
echo "üìÑ analisador_zennith.sh (linha 19):"
sed -n '19,25p' analisador_zennith.sh

# 2. CRIAR FUN√á√ÉO LOG UNIFICADA SUPERIOR
echo ""
echo "üÜô Criando fun√ß√£o log unificada melhorada..."

cat > utils_zennith_log_avancado.sh << 'LOGAVANCADOEOF'
#!/bin/bash
# üß† UTILS_ZENNITH_LOG - Sistema de Log Unificado Avan√ßado
# =======================================================

# CONFIGURA√á√ïES DE LOG
ZENNITH_LOG_LEVEL="${ZENNITH_LOG_LEVEL:-INFO}"  # DEBUG, INFO, WARN, ERROR
ZENNITH_LOG_FILE="${ZENNITH_LOG_FILE:-/tmp/zennith_system.log}"

# FUN√á√ÉO LOG UNIFICADA AVAN√áADA
log_zennith() {
    local level="INFO"
    local message="$1"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    # Determinar n√≠vel se especificado
    if [[ "$1" =~ ^(DEBUG|INFO|WARN|ERROR): ]]; then
        level="${BASH_REMATCH[1]}"
        message="${message#*: }"
    fi
    
    # Verificar se o n√≠vel √© suficiente para log
    case "$ZENNITH_LOG_LEVEL" in
        DEBUG) ;;
        INFO) [[ "$level" =~ (DEBUG) ]] && return ;;
        WARN) [[ "$level" =~ (DEBUG|INFO) ]] && return ;;
        ERROR) [[ "$level" =~ (DEBUG|INFO|WARN) ]] && return ;;
    esac
    
    # Formatar sa√≠da
    local log_entry="[ZENNITH $timestamp $level] $message"
    
    # Sa√≠da para console
    echo "$log_entry"
    
    # Sa√≠da para arquivo se configurado
    if [[ -n "$ZENNITH_LOG_FILE" ]]; then
        echo "$log_entry" >> "$ZENNITH_LOG_FILE"
    fi
}

# FUN√á√ïES ESPECIALIZADAS
log_info() { log_zennith "INFO: $1"; }
log_warn() { log_zennith "WARN: $1"; }
log_error() { log_zennith "ERROR: $1"; }
log_debug() { log_zennith "DEBUG: $1"; }

# FUN√á√ÉO DE RELAT√ìRIO DE SISTEMA
log_system_report() {
    log_info "=== RELAT√ìRIO DE SISTEMA ZENNITH ==="
    log_info "Data/Hora: $(date)"
    log_info "Usu√°rio: $(whoami)"
    log_info "Diret√≥rio: $(pwd)"
    log_info "Script: $0"
    log_info "====================================="
}

# VERIFICAR E CARREGAR
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    # Execu√ß√£o direta - testar
    log_zennith "TESTE: Sistema de log Zennith carregado com sucesso"
    log_info "Mensagem informativa"
    log_warn "Mensagem de aviso" 
    log_error "Mensagem de erro"
    log_debug "Mensagem de debug"
else
    # Sourced - apenas carregar
    log_zennith "DEBUG: Utils Zennith Log carregado como library"
fi

export -f log_zennith log_info log_warn log_error log_debug log_system_report
LOGAVANCADOEOF

echo "‚úÖ Sistema de log avan√ßado criado"

# 3. MIGRADOR AUTOM√ÅTICO SEGURO
echo ""
echo "üõ°Ô∏è Executando migra√ß√£o segura das fun√ß√µes log..."

# Backup primeiro
cp organizador_universal_fundacao.sh organizador_universal_fundacao.sh.pre_log_migration
cp sistema_governanca_zennith.sh sistema_governanca_zennith.sh.pre_log_migration
cp analisador_zennith.sh analisador_zennith.sh.pre_log_migration

# Substituir chamadas de log
for script in organizador_universal_fundacao.sh sistema_governanca_zennith.sh analisador_zennith.sh; do
    echo "üîß Migrando $script..."
    
    # Remover fun√ß√£o log original e substituir chamadas
    sed -i '24,30d' "$script"  # Remove fun√ß√£o log original
    sed -i 's/log "/log_zennith "/g' "$script"  # Substitui chamadas
    
    # Adicionar import no topo
    sed -i '1i\source utils_zennith_log_avancado.sh' "$script"
    
    echo "‚úÖ $script migrado"
done

# 4. VERIFICAR MIGRA√á√ÉO
echo ""
echo "üîç Verificando migra√ß√£o..."
for script in organizador_universal_fundacao.sh sistema_governanca_zennith.sh analisador_zennith.sh; do
    echo "üìÑ $script:"
    echo "  Fun√ß√£o log removida: $(grep -c "log() {" "$script")"
    echo "  Chamadas log_zennith: $(grep -c "log_zennith" "$script")"
done

echo ""
echo "üéØ MIGRA√á√ÉO DE LOG CONCLU√çDA!"
