#!/bin/bash

echo "ÔøΩÔøΩ TESTANDO URLs DAS CORRE√á√ïES DIRETAMENTE"
echo "=========================================="

# Obter a URL base do √∫ltimo deploy
URL_BASE=$(npx vercel --prod 2>&1 | grep -o 'https://[^ ]*' | head -1)

if [ -z "$URL_BASE" ]; then
    echo "‚ùå N√£o foi poss√≠vel obter a URL do deploy"
    exit 1
fi

echo "üîó URL Base: $URL_BASE"
echo ""

# Testar cada URL
test_url() {
    local path=$1
    local description=$2
    local url="${URL_BASE}${path}"
    
    echo "üîç Testando: $description"
    echo "   URL: $url"
    
    # Fazer requisi√ß√£o e verificar status
    response=$(curl -s -o /dev/null -w "%{http_code}" "$url")
    
    if [ "$response" -eq 200 ]; then
        echo "   ‚úÖ Status: $response - FUNCIONAL"
        
        # Verificar se a p√°gina tem conte√∫do din√¢mico
        content=$(curl -s "$url")
        if echo "$content" | grep -q "useState\|useEffect\|setInterval"; then
            echo "   üîÑ Cont√©m c√≥digo din√¢mico"
        else
            echo "   ‚ö†Ô∏è  Pode ser est√°tica"
        fi
        
    elif [ "$response" -eq 404 ]; then
        echo "   ‚ùå Status: $response - N√ÉO ENCONTRADA"
    else
        echo "   ‚ö†Ô∏è  Status: $response - VERIFICAR"
    fi
    echo ""
}

# Testar todas as URLs importantes
test_url "/central" "Portal Central"
test_url "/modulo-303" "M√≥dulo 303 Din√¢mico"
test_url "/metadados-reais" "Metadados Reais"
test_url "/sistema-vivo" "Sistema Vivo Dashboard"
test_url "/status" "Status Monitoramento"
test_url "/api/health" "Health Check API"
test_url "/api/metrics" "M√©tricas API"

echo "üìã RESUMO DOS TESTES:"
echo "---------------------"
echo "Se todas as URLs retornarem 200, o sistema est√° operacional!"
echo "Verifique manualmente as p√°ginas para confirmar funcionalidades din√¢micas."

