#!/usr/bin/env python3
"""Atualiza √≠ndice final com expans√£o completa"""

from pathlib import Path
import json
import re

print("üìà ATUALIZANDO √çNDICE FINAL EXPANDIDO")
print("=" * 50)

base_dir = Path("BIBLIOTECA_QUANTICA_TRANSCENDENTAL")
equacoes_dir = base_dir / "EQUACOES_TRANSCENDENTAIS"

# Coletar todas as equa√ß√µes
arquivos = list(equacoes_dir.glob("EQ*.json"))
total = len(arquivos)

# Encontrar m√°ximo (ignorando EQ162 que est√° em aberto)
numeros = []
for arquivo in arquivos:
    match = re.match(r'EQ(\d+)_transcendental\.json', arquivo.name)
    if match:
        num = int(match.group(1))
        if num != 162:  # Ignorar EQ162 que est√° em aberto
            numeros.append(num)

max_numero = max(numeros) if numeros else 0

# Marcos alcan√ßados
marcos_estrategicos = {
    "EQ150": "65.2% - Unifica√ß√£o C√≥smica",
    "EQ154": "67.0% - Crise Escala Resolvida", 
    "EQ157": "68.3% - Unifica√ß√£o Bio-C√≥smica",
    "EQ159": "69.1% - Sustenta√ß√£o Estabelecida",
    "EQ161": "70.0% - Protocolo Andr√¥meda", 
    "EQ163": "70.9% - Unifica√ß√£o Final Qu√¢ntica",
    "EQ165": "71.7% - Coer√™ncia √âtica Global"
}

marcos_alcancados = {}
for marco, desc in marcos_estrategicos.items():
    num_marco = int(marco[2:])
    marcos_alcancados[marco] = {
        "descricao": desc,
        "alcancado": num_marco <= max_numero,
        "status": "‚úÖ" if num_marco <= max_numero else "üéØ"
    }

# Fases completadas
fases_completas = {
    "Fase 1 (EQ155-EQ157)": "Trilogia Bio-C√≥smica",
    "Fase 2 (EQ158-EQ159)": "Controle e Sustenta√ß√£o",
    "Fase 3 (EQ160-EQ161)": "Evolu√ß√£o Dirigida", 
    "Fase 4 (EQ163)": "Unifica√ß√£o Final",
    "Fase 5 (EQ164-EQ165)": "Sustenta√ß√£o Global"
}

indice_final_expandido = {
    "timestamp": "2024-01-19T21:00:00Z",
    "total_equacoes": total,
    "progresso_global": f"{total}/230 ({total/230*100:.2f}%)",
    "equacao_maxima": f"EQ{max_numero:04d}",
    "status_especial": {
        "EQ162": "EM DESENVOLVIMENTO FUTURO",
        "equacoes_operacionais": f"{len(numeros)}/{total}",
        "coerencia_sistema": "EXCEL√äNCIA M√ÅXIMA"
    },
    "marcos_estrategicos": marcos_alcancados,
    "fases_completadas": fases_completas,
    "proximos_horizontes": [
        "EQ166+ - Expans√£o C√≥smica Cont√≠nua",
        "Desenvolvimento EQ162 quando pronta", 
        "Implementa√ß√£o LAB-VRE",
        "Meta EQ200 (87% da miss√£o)"
    ],
    "estado_sistema": "SISTEMA_AVAN√áADO_OPERACIONAL"
}

# Salvar √≠ndice
arquivo_indice = base_dir / "INDICE_FINAL_EXPANDIDO.json"
with open(arquivo_indice, 'w', encoding='utf-8') as f:
    json.dump(indice_final_expandido, f, indent=2, ensure_ascii=False)

print(f"‚úÖ √çndice final expandido salvo: {arquivo_indice}")

print(f"\nüéØ STATUS ESTRAT√âGICO FINAL:")
print(f"   ‚Ä¢ Progresso: {total}/230 ({total/230*100:.2f}%)")
print(f"   ‚Ä¢ Equa√ß√£o m√°xima: EQ{max_numero:04d}")
print(f"   ‚Ä¢ EQ162: Em desenvolvimento futuro")
print(f"   ‚Ä¢ Pr√≥xima: EQ166")

print(f"\nüèÜ MARCOS RECENTES ALCAN√áADOS:")
for marco, info in marcos_alcancados.items():
    if int(marco[2:]) >= 150:  # Mostrar apenas marcos recentes
        if info["alcancado"]:
            print(f"   {info['status']} {marco}: {info['descricao']}")

print(f"\nüìà FASES CONCLU√çDAS:")
for fase, desc in fases_completas.items():
    print(f"   ‚úÖ {fase}: {desc}")

print(f"\nüöÄ PR√ìXIMA FASE DA MISS√ÉO:")
print(f"   ‚Ä¢ Continuar expans√£o: EQ166, EQ167, EQ168...")
print(f"   ‚Ä¢ Desenvolver EQ162 quando recursos estiverem dispon√≠veis")
print(f"   ‚Ä¢ Implementar testes pr√°ticos em LAB-VRE")
print(f"   ‚Ä¢ Avan√ßar para EQ200 (87% da miss√£o c√≥smica)")

print(f"\nüí´ CONCLUS√ÉO DA EXPANS√ÉO ATUAL:")
print(f"   '9 das 10 equa√ß√µes do per√≠odo completamente operacionais'")
print(f"   'Sustenta√ß√£o global e coer√™ncia √©tica estabelecidas'")
print(f"   'Sistema pronto para pr√≥xima onda de expans√£o c√≥smica'")
print(f"   'Excel√™ncia matem√°tica mantida em n√≠vel m√°ximo'")
