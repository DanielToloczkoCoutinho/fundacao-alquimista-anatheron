#!/usr/bin/env python3
"""
VERIFICA√á√ÉO ESPEC√çFICA DAS EQUA√á√ïES 140-145
Confirma√ß√£o do que foi realmente processado
"""

from pathlib import Path
import json

print("üîç VERIFICA√á√ÉO DAS EQUA√á√ïES 140-145")
print("=" * 50)

# Verificar especificamente as equa√ß√µes 140-145
equacoes_alvo = [140, 141, 142, 143, 144, 145]
bibliotecas = [
    "BIBLIOTECA_QUANTICA_TRANSCENDENTAL",
    "BIBLIOTECA_EQUACOES_COSMICAS", 
    "BIBLIOTECA_EQUACOES",
    "BIBLIOTECA_QUANTICA_IBM"
]

print("üìã STATUS DAS EQUA√á√ïES 140-145:")

for eq_num in equacoes_alvo:
    encontrada = False
    locais = []
    
    for biblioteca in bibliotecas:
        bib_path = Path(biblioteca)
        if bib_path.exists():
            # Verificar JSON
            arquivo_json = bib_path / "EQUACOES_TRANSCENDENTAIS" / f"EQ{eq_num:04d}_transcendental.json"
            if arquivo_json.exists():
                encontrada = True
                locais.append(f"{biblioteca}/JSON")
            
            # Verificar Python 
            arquivo_py = bib_path / "EQUACOES_TRANSCENDENTAIS" / f"EQ{eq_num:04d}.py"
            if arquivo_py.exists():
                encontrada = True
                locais.append(f"{biblioteca}/Python")
    
    status = "‚úÖ ENCONTRADA" if encontrada else "‚ùå FALTANDO"
    print(f"   ‚Ä¢ EQ{eq_num:04d}: {status}")
    if locais:
        print(f"      üìç Locais: {', '.join(locais)}")

# Verificar conte√∫do das equa√ß√µes 143-145 espec√≠ficas
print(f"\nüìñ CONTE√öDO DAS EQUA√á√ïES 143-145:")
for eq_num in [143, 144, 145]:
    arquivo_alvo = Path("BIBLIOTECA_QUANTICA_TRANSCENDENTAL") / "EQUACOES_TRANSCENDENTAIS" / f"EQ{eq_num:04d}_transcendental.json"
    
    if arquivo_alvo.exists():
        try:
            with open(arquivo_alvo, 'r', encoding='utf-8') as f:
                dados = json.load(f)
            
            codigo = dados.get('codigo', 'N/A')
            titulo = dados.get('titulo_simbolico', 'N/A')
            qubits = dados.get('preparacao_ibm', {}).get('qubits_necessarios', 'N/A')
            
            print(f"\n   üìÑ EQ{eq_num:04d}:")
            print(f"      ‚Ä¢ C√≥digo: {codigo}")
            print(f"      ‚Ä¢ T√≠tulo: {titulo}")
            print(f"      ‚Ä¢ Qubits: {qubits}")
            
        except Exception as e:
            print(f"   ‚ùå Erro ao ler EQ{eq_num:04d}: {e}")
    else:
        print(f"   ‚ùå EQ{eq_num:04d}: Arquivo n√£o encontrado")

# Verificar processadores recentes
print(f"\nüîß PROCESSADORES RECENTES:")
processadores = [
    "PROCESSADOR_REDE_COSMICA.py",
    "PROCESSADOR_REDE_EXPANDIDO.py",
    "PROCESSADOR_ALMA_COLETIVA.py",
    "PROCESSADOR_ESTELAR.py"
]

for proc in processadores:
    arquivo = Path(proc)
    if arquivo.exists():
        print(f"   ‚úÖ {proc}: Presente")
    else:
        print(f"   ‚ùå {proc}: Ausente")

print(f"\nüéØ CONCLUS√ÉO:")
print(f"   ‚Ä¢ Equa√ß√µes 140-145 devem estar consolidadas")
print(f"   ‚Ä¢ Pr√≥xima: EQ0146 precisa ser processada")
print(f"   ‚Ä¢ Sequ√™ncia cont√≠nua at√© EQ0230")
