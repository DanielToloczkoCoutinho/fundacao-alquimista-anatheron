#!/bin/bash
# ðŸ”§ AMBIENTE INTERATIVO QUÃ‚NTICO
# ðŸŽ¯ Entra no Python interativo com tudo carregado

echo "ðŸ”§ INICIANDO AMBIENTE INTERATIVO QUÃ‚NTICO..."
cd ~/fundacao-alquimista-anatheron
source /tmp/fundacao_venv/bin/activate

# Criar script temporÃ¡rio com imports
cat > /tmp/quantum_env.py << 'IMPORTS'
print("ðŸ”§ CARREGANDO AMBIENTE QUÃ‚NTICO...")
print("=" * 40)

# Imports principais
from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
from qiskit.visualization import plot_histogram
import numpy as np
import matplotlib.pyplot as plt

print("âœ… QuantumCircuit, AerSimulator carregados")
print("âœ… NumPy, Matplotlib carregados")
print("")

# ConfiguraÃ§Ãµes Ãºteis
simulator = AerSimulator()
print("ðŸ”§ VariÃ¡veis configuradas:")
print("   - simulator = AerSimulator()")
print("   - np = numpy")
print("   - plt = matplotlib.pyplot")
print("")

# FunÃ§Ã£o Ãºtil rÃ¡pida
def circuito_rapido(n_qubits=2):
    '''Cria circuito quÃ¢ntico rÃ¡pido'''
    qc = QuantumCircuit(n_qubits)
    for i in range(n_qubits):
        qc.h(i)
    for i in range(n_qubits-1):
        qc.cx(i, i+1)
    qc.measure_all()
    return qc

print("ðŸ’¡ FunÃ§Ã£o disponÃ­vel: circuito_rapido(n_qubits)")
print("   Exemplo: qc = circuito_rapido(3)")
print("   result = simulator.run(qc, shots=100).result()")
print("   counts = result.get_counts()")
print("")

print("ðŸŽ‰ AMBIENTE QUÃ‚NTICO PRONTO!")
print("ðŸš€ Comece a programar!")
print("")
IMPORTS

# Entrar no Python interativo com o ambiente carregado
python3 -i /tmp/quantum_env.py
